Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.3.304 Build 20200925_000000

Compiler options: -I/nobackupp19/dekelsch/Software/ParMmg/build/Mmg-prefix/src/Mmg-build/include -I/nobackupp19/dekelsch/Software/ParMmg/build/include -I/nobackupp19/dekelsch/parmetis-4.0.3/parmetis-install/include -I/nobackupp19/dekelsch/parmetis-4.0.3/metis/metis-install/include -I/nobackupp19/dekelsch/boost_1_71_0/boost-install/include -I/home1/dekelsch/Software/tinyxml -I/nobackupp19/dekelsch/CGNS-3.3.0/src/install/include -I/home1/dekelsch/local/lib/python3.12/site-packages/numpy/_core/include -I/home1/dekelsch/local/lib/python3.12/site-packages/mpi4py/include -I/home1/dekelsch/local/include/python3.12/ -std=c++17 -g -DMPI_NO_CPPBIND -fPIC -lm -lpthread -ldl -lutil -L/home1/dekelsch/local/lib/python3.12/ -O2 -Wall -axAVX,CORE-AVX2,CORE-AVX512 -qopt-report-phase=vec -qopt-report=5 -o PartiClass.so -L/nobackupp19/dekelsch/Software/ParMmg/build/Mmg-prefix/src/Mmg-build/lib -L/nobackupp19/dekelsch/Software/ParMmg/build/lib -L/nobackupp19/dekelsch/parmetis-4.0.3/parmetis-install/lib -L/nobackupp19/dekelsch/parmetis-4.0.3/metis/metis-install/lib -L/nobackupp19/dekelsch/boost_1_71_0/boost-install/stage/lib -L/home1/dekelsch/Software/tinyxml -L/nobackupp19/dekelsch/CGNS-3.3.0/src/install/lib -shared -lm -lpthread -ldl -lutil -L/home1/dekelsch/local/lib/python3.12/ -lmpi -lparmetis -lmetis -lhdf5 -mkl -lparmmg -lmmg -lcgns -lmpi

Begin optimization report for: PartObject::PartObject(PartObject *, mesh *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, int, bool, MPI_Comm)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(161,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END
===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(233,7) inlined into /usr/include/c++/8/bits/char_traits.h(327,6)
   remark #15523: loop was not vectorized: loop control variable __s was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(165,7) inlined into /usr/include/c++/8/bits/char_traits.h(328,11)
   remark #15523: loop was not vectorized: loop control variable __i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: PartObject::updateFace2EntityPerPartition(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3230,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3232,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3243,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3245,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3261,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3263,45) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3280,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3298,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3285,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3291,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3329,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3333,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3338,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3341,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3342,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3344,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3391,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3395,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3401,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3403,56) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::updateFace2EntityPerPartition(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3230,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3232,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3243,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3245,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3261,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3263,45) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3280,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3298,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3285,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3291,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3329,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3333,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3338,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3341,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3342,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3344,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3391,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3395,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3401,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3403,56) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::updateFace2EntityPerPartition(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3230,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3232,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3243,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3245,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3261,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3263,45) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3280,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3298,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3285,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3291,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3329,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3333,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3338,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3341,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3342,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3344,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3391,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3395,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3401,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3403,56) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::updateFace2EntityPerPartition(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3230,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3232,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3243,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3245,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3261,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3263,45) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3280,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3298,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3285,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3291,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3329,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3333,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3338,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3341,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3342,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3344,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3391,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3395,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3401,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3403,56) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::updateFace2EntityPerPartition(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3304,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3370,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3371,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3372,40)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3230,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3232,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3243,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3245,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3249,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3261,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3263,45) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3280,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3298,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3285,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3291,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3329,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3333,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3337,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3338,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3341,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3342,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3344,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3391,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3395,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3397,42) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3401,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3403,56) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::find(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, const std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2547,59)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getAdjacentElementLayer(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(3126,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_partobject.cpp(3126,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3126,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2538,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2568,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2572,32) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2575,40)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2577,44) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(2583,40)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2585,31) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2610,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2627,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2615,45)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2621,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2657,48)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2663,27) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2660,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2663,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2674,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2676,43) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(2682,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2684,35) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(2687,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2689,35) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2716,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2724,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2720,54)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2724,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2815,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2820,56) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2818,26)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2820,56) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2826,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2831,56) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2829,26)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2831,56) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2844,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2849,46) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2847,38)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2849,46) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2853,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2855,54) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2867,29)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2870,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2890,29)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2894,36) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2939,8)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2957,53) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2944,52)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2950,20) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2980,8)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2988,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2984,58)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2988,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2990,45)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2996,45) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3034,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3037,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3045,8)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3049,37) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3066,45)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3068,37) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3070,12)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3072,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3112,33)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3120,39) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3133,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3136,38) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3152,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3158,38) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::find(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::find(std::set<int, std::less<int>, std::allocator<int>> *, const std::set<int, std::less<int>, std::allocator<int>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_set.h(777,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::find(std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>> *, const std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::operator=(std::set<int, std::less<int>, std::allocator<int>> *, const std::set<int, std::less<int>, std::allocator<int>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_set.h(299,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_set.h(299,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_set.h(299,7)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_set.h(299,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_set.h(299,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(299,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::operator[](std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>> *, const std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_M_drop_node(std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Link_type) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::~set(std::set<int, std::less<int>, std::allocator<int>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(282,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::clear(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::clear(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::clear(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::map(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, const std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_map.h(206,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(206,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(206,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Alloc_node>(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::CommunicateAdjacencyInfoExtendedPartition(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *, MPI_Comm)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2356,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(2115,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2360,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(2115,42) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2364,33)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2366,39)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(293,19) inlined into ../src/adapt_partobject.cpp(2382,17)
   remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2398,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2405,26) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2414,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2418,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2423,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2426,55) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2430,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/vector.tcc(109,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2433,53)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2451,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2458,40) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2456,38)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(2464,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::~map(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::~map(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Rb_tree(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::CommunicateAdjacencyInfoLocalPartition(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *, MPI_Comm)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2225,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2242,28) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2229,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2242,28) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2233,31)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2235,39)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(293,19) inlined into ../src/adapt_partobject.cpp(2251,17)
   remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2267,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2272,24) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2284,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2288,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2293,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2296,55) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2300,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/vector.tcc(109,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2303,53)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2321,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2328,40) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2326,38)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(2335,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::GenerateFace2VertexMap(PartObject *, MPI_Comm)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(1949,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(1952,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(1953,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(1954,39)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1974,33)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(1977,34)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(1982,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(1984,38)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(1991,24)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(1949,59)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(1949,59)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(1949,59)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(1949,59)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_M_emplace_hint_unique<const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &>, std::tuple<>>(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::const_iterator, const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &> &&, std::tuple<> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_M_emplace_hint_unique<const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &>, std::tuple<>>(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::const_iterator, const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &> &&, std::tuple<> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::operator=(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/vector.tcc(215,24)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/vector.tcc(217,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(322,4) inlined into /usr/include/c++/8/bits/vector.tcc(227,56)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,19) inlined into /usr/include/c++/8/bits/vector.tcc(227,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(322,4) inlined into /usr/include/c++/8/bits/vector.tcc(232,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,8) inlined into /usr/include/c++/8/bits/vector.tcc(234,8)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::getFace2VertexPerPartitionMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, int, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2036,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2038,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2048,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2050,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2066,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2068,42) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2083,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2099,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2088,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2093,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2125,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2129,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2134,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2136,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(2138,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2140,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2181,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2188,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2195,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2197,49) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getFace2VertexPerPartitionMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, int, MPI_Comm) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2036,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2038,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2048,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2050,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2066,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2068,42) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2083,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2099,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2088,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2093,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2125,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2129,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2134,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2136,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(2138,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2140,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2181,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2188,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2195,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2197,49) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getFace2VertexPerPartitionMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, int, MPI_Comm) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2036,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2038,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2048,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2050,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2066,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2068,42) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2083,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2099,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2088,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2093,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2125,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2129,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2134,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2136,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(2138,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2140,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2181,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2188,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2195,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2197,49) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getFace2VertexPerPartitionMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, int, MPI_Comm) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2036,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2038,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2048,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2050,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2066,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2068,42) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2083,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2099,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2088,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2093,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2125,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2129,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2134,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2136,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(2138,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2140,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2181,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2188,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2195,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2197,49) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getFace2VertexPerPartitionMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, int, MPI_Comm) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2103,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2163,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2164,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(2165,40)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2036,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2038,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2048,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2050,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2054,17) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2066,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2068,42) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2083,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2099,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2088,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2093,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2125,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2129,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2133,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2134,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2136,42) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(2138,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2140,52) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(2181,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2188,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2190,38) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(2195,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2197,49) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GenerateFace2ElementMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(1758,36)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at ../src/adapt_partobject.cpp(1765,46)
      remark #15523: loop was not vectorized: loop control variable q was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1778,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1780,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1784,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1791,24) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1818,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1834,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1823,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1828,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1862,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1866,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(1871,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1874,51) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1901,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1908,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(1901,68)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::GenerateFace2ElementMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(1758,36)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at ../src/adapt_partobject.cpp(1765,46)
      remark #15523: loop was not vectorized: loop control variable q was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1778,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1780,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1784,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1791,24) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1818,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1834,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1823,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1828,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1862,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1866,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(1871,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1874,51) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1901,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1908,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(1901,68)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::GenerateFace2ElementMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(1758,36)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at ../src/adapt_partobject.cpp(1765,46)
      remark #15523: loop was not vectorized: loop control variable q was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1778,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1780,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1784,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1791,24) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1818,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1834,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1823,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1828,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1862,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1866,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(1871,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1874,51) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1901,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1908,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(1901,68)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::GenerateFace2ElementMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(1758,36)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at ../src/adapt_partobject.cpp(1765,46)
      remark #15523: loop was not vectorized: loop control variable q was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1778,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1780,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1784,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1791,24) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1818,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1834,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1823,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1828,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1862,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1866,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(1871,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1874,51) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1901,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1908,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(1901,68)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::GenerateFace2ElementMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1838,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(1890,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(1758,36)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at ../src/adapt_partobject.cpp(1765,46)
      remark #15523: loop was not vectorized: loop control variable q was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1778,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1780,38) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1784,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1791,24) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1818,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1834,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1823,50)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1828,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1862,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1866,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1870,58) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(1871,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1874,51) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1901,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1908,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1910,42) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(1901,68)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::DetermineElement2ProcMap(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, int, int, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(1667,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_partobject.cpp(1667,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1667,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(1010,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1012,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1027,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1031,40) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1051,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1053,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1059,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1061,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1070,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1072,49) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1082,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1084,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1123,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1125,49) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1158,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1193,55) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1163,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1166,63) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1252,56)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1256,65) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1254,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1256,65) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1267,57)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1271,64) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1269,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1271,64) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1275,57)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1279,64) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1277,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1279,64) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1284,57)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1288,63) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1286,39)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1288,63) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1292,69)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1296,26) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1294,46)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1296,26) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1307,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1322,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1315,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1322,42) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1341,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1347,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1408,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1425,50) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1413,49)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1418,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1444,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1453,55) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1448,55)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1453,55) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(1455,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1457,50) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1501,42)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1504,35) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1512,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1517,33) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1531,42)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1533,34) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1535,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1537,33) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1564,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1567,26) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1578,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1580,43) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1590,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1593,40) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1615,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1617,39) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(1643,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1647,26) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(1673,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1676,39) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(1699,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(1704,33) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.357
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.875
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::find(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::operator[](std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::operator[](std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::insert(std::set<int, std::less<int>, std::allocator<int>> *, const std::set<int, std::less<int>, std::allocator<int>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::operator[](std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, const std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::~map(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::DeterminePartitionLayout(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> *, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference tpwgts[i] has unaligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 125.670 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
   remark #15389: vectorization support: reference tpwgts[i] has unaligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 125.670 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference tpwgts[i] has unaligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 125.670 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(835,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(902,46)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(907,18) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(933,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(938,25)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::DeterminePartitionLayout(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> *, MPI_Comm) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
   remark #15389: vectorization support: reference tpwgts[i] has unaligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.833
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 26.050 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference tpwgts[i] has unaligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 26.050 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(835,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(902,46)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(907,18) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(933,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(938,25)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::DeterminePartitionLayout(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> *, MPI_Comm) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
   remark #15389: vectorization support: reference tpwgts[i] has unaligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.833
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 26.050 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(835,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(902,46)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(907,18) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(933,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(938,25)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::DeterminePartitionLayout(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> *, MPI_Comm) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
   remark #15388: vectorization support: reference tpwgts[i] has aligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 2.167
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 25.900 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference tpwgts[i] has aligned access   [ ../src/adapt_partobject.cpp(866,9) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.400
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 25.900 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(864,5)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(835,84)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(835,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(902,46)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(907,18) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(933,40)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(938,25)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_fill_insert(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::iterator, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.421
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_fill_insert(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::iterator, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_fill_insert(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::iterator, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_fill_insert(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::iterator, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.769
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.810 
   remark #15478: estimated potential speedup: 3.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_fill_insert(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::iterator, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(506,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 2.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(513,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/8/bits/vector.tcc(523,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/vector.tcc(536,5)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: ParallelState_Parmetis_Lite::ParallelState_Parmetis_Lite(ParallelState_Parmetis_Lite *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::vector<int, std::allocator<int>> *, MPI_Comm)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_parmetisstate_lite.h(71,32)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_parmetisstate_lite.h(75,25)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_parmetisstate_lite.h(77,15)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_parmetisstate_lite.h(81,15)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_parmetisstate_lite.h(85,15)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_parmetisstate_lite.h(100,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_parmetisstate_lite.h(124,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_parmetisstate_lite.h(145,32)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_parmetisstate_lite.h(149,33)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_parmetisstate_lite.h(151,33)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Rb_tree(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Alloc_node>(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetOptimalDistributionSchedule(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> &, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.547
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 10 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 3.560 
   remark #15478: estimated potential speedup: 6.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.649
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 10 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 3.560 
   remark #15478: estimated potential speedup: 6.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.547
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 10 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 3.560 
   remark #15478: estimated potential speedup: 6.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.420
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 5.180 
   remark #15478: estimated potential speedup: 5.400 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.048
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 5.180 
   remark #15478: estimated potential speedup: 5.400 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.420
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 5.180 
   remark #15478: estimated potential speedup: 5.400 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(251,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(270,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(378,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(394,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(402,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(415,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(481,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(483,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(501,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(504,36) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(532,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(536,38) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(559,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(564,50) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(581,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(583,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(586,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(589,62) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(595,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(597,66) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(615,17)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(624,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(626,52) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(632,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(634,53) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(647,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(655,45) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(698,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(703,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(749,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(752,58) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(761,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(770,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(781,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(783,67) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(785,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(787,70) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(791,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(793,71) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetOptimalDistributionSchedule(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> &, MPI_Comm) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.631
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 10 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 6.000 
   remark #15478: estimated potential speedup: 3.630 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.771
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 10 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 6.000 
   remark #15478: estimated potential speedup: 3.630 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.631
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 10 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 6.000 
   remark #15478: estimated potential speedup: 3.630 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.470
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 9.250 
   remark #15478: estimated potential speedup: 3.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.014
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 9.250 
   remark #15478: estimated potential speedup: 3.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.470
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 9.250 
   remark #15478: estimated potential speedup: 3.150 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(251,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(270,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(378,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(394,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(402,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(415,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(481,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(483,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(501,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(504,36) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(532,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(536,38) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(559,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(564,50) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(581,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(583,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(586,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(589,62) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(595,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(597,66) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(615,17)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(624,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(626,52) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(632,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(634,53) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(647,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(655,45) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(698,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(703,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(749,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(752,58) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(761,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(770,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(781,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(783,67) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(785,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(787,70) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(791,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(793,71) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetOptimalDistributionSchedule(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> &, MPI_Comm) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.771
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 10 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 6.000 
   remark #15478: estimated potential speedup: 3.630 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.087
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 8.620 
   remark #15478: estimated potential speedup: 3.350 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(251,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(270,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(378,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(394,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(402,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(415,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(481,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(483,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(501,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(504,36) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(532,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(536,38) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(559,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(564,50) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(581,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(583,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(586,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(589,62) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(595,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(597,66) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(615,17)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(624,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(626,52) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(632,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(634,53) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(647,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(655,45) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(698,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(703,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(749,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(752,58) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(761,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(770,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(781,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(783,67) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(785,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(787,70) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(791,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(793,71) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetOptimalDistributionSchedule(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> &, MPI_Comm) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15388: vectorization support: reference old_nelem_red[i] has aligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.649
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 9 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 14.250 
   remark #15478: estimated potential speedup: 1.720 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15388: vectorization support: reference toR_red_update[i] has aligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15388: vectorization support: reference toR_red_update[i] has aligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15388: vectorization support: reference toR_red_update[i] has aligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.176
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15455: masked aligned unit stride stores: 3 
   remark #15457: masked unaligned unit stride stores: 3 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 53 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 2.750 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(251,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(270,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(378,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(394,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(402,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(415,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(481,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(483,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(501,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(504,36) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(532,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(536,38) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(559,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(564,50) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(581,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(583,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(586,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(589,62) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(595,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(597,66) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(615,17)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(624,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(626,52) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(632,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(634,53) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(647,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(655,45) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(698,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(703,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(749,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(752,58) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(761,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(770,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(781,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(783,67) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(785,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(787,70) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(791,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(793,71) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetOptimalDistributionSchedule(PartObject *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> &, MPI_Comm) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference old_nelem[i] has unaligned access   [ ../src/adapt_partobject.cpp(314,9) ]
   remark #15389: vectorization support: reference optiSize[i] has unaligned access   [ ../src/adapt_partobject.cpp(308,9) ]
   remark #15389: vectorization support: reference toR[i] has unaligned access   [ ../src/adapt_partobject.cpp(307,9) ]
   remark #15389: vectorization support: reference toS[i] has unaligned access   [ ../src/adapt_partobject.cpp(306,9) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(309,9) ]
   remark #15389: vectorization support: reference toS_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(310,9) ]
   remark #15389: vectorization support: reference toR_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(311,9) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(312,9) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(313,9) ]
   remark #15388: vectorization support: reference old_nelem_red[i] has aligned access   [ ../src/adapt_partobject.cpp(315,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.649
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 9 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 25 
   remark #15477: vector cost: 14.250 
   remark #15478: estimated potential speedup: 1.720 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(304,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(338,22) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(339,22) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,13) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,33) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(343,50) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(344,13) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(350,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,13) ]
   remark #15389: vectorization support: reference optiSize_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,33) ]
   remark #15389: vectorization support: reference old_nelem_red[i] has unaligned access   [ ../src/adapt_partobject.cpp(351,49) ]
   remark #15389: vectorization support: reference toS_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(356,13) ]
   remark #15389: vectorization support: reference toR_red_update[i] has unaligned access   [ ../src/adapt_partobject.cpp(357,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.168
   remark #15355: vectorization support: ns is int type reduction   [ ../src/adapt_partobject.cpp(333,12) ]
   remark #15355: vectorization support: nr is int type reduction   [ ../src/adapt_partobject.cpp(334,12) ]
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 53 
   remark #15477: vector cost: 101.000 
   remark #15478: estimated potential speedup: 0.520 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(336,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(251,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(270,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(378,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(394,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(402,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(415,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(420,20) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(481,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(483,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(485,19) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(501,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(504,36) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(532,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(536,38) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_partobject.cpp(548,26)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(559,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(564,50) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(581,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(583,41) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(586,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(589,62) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(595,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(597,66) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(615,17)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(624,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(626,52) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(632,17)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(634,53) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(647,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(655,45) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(698,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(703,13) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(749,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(752,58) ]
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(761,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(770,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(773,44) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(781,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(783,67) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(785,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(787,70) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(791,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(793,71) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer>(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::push_back(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::pointer>(std::_Vector_base<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::pointer, std::_Vector_base<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::~vector(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(568,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::vector(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::size_type, const std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(568,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::find(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, const std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.421
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.769
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.810 
   remark #15478: estimated potential speedup: 3.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 2.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::~map(std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::~PartObject(PartObject *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(201,1)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Link_type) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(651,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1882,4)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::buildExtendedAdjacencyData(PartObject *, MPI_Comm, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3437,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3440,38) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3446,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3448,37) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3460,41)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(3471,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3473,50) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3492,49)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
         LOOP END

         LOOP BEGIN at ../src/adapt_partobject.cpp(3505,25)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3507,57) ]

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3526,107)
               remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
            LOOP END

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3526,107)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3526,107)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3526,57)
               remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
            LOOP END
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into ../src/adapt_partobject.cpp(3538,30)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3538,30)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into ../src/adapt_partobject.cpp(3538,30)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3538,30)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3538,30)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3538,30)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3540,5)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Alloc_node>(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Rb_tree(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::find(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2547,59)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::find(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2547,59)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_M_get_insert_unique_pos(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, const std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_M_erase(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_M_copy<std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Const_Link_type, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Base_ptr, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::getPartMap(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3880,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3880,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3880,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2VertMap(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3890,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3890,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3890,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2FaceMap(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3895,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3895,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3895,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getFace2VertMap(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3900,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3900,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3900,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2ElemMap(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3905,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3905,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3905,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getFace2ElemMap(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3910,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3910,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3910,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getLocalVert2GlobalVert(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3935,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3935,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3935,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2DataMap(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3915,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3915,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3915,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2LocalVertMap(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3885,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3885,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3885,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2CentroidData(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3925,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3925,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3925,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getExtendedAdjacencyData(std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3920,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3920,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3920,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3920,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3920,12)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3920,12)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3920,12)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3920,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3920,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Alloc_node>(std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_M_copy<std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Alloc_node>(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Const_Link_type, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Base_ptr, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2RankMap(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3940,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3940,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3940,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getLocalElemSet(std::set<int, std::less<int>, std::allocator<int>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3955,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3955,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3955,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getLocalVertsMap(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3966,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3966,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3966,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getGhostFaceVert(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3930,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3930,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3930,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::AddStateVecForAdjacentElements(PartObject *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, int, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3582,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3584,51) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(293,19) inlined into ../src/adapt_partobject.cpp(3587,13)
      remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3597,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3614,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3602,52)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3608,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3641,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3645,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3650,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3653,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3706,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3710,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3714,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3716,42) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::AddStateVecForAdjacentElements(PartObject *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, int, MPI_Comm) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3582,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3584,51) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(293,19) inlined into ../src/adapt_partobject.cpp(3587,13)
      remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3597,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3614,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3602,52)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3608,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3641,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3645,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3650,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3653,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3706,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3710,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3714,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3716,42) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::AddStateVecForAdjacentElements(PartObject *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, int, MPI_Comm) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3582,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3584,51) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(293,19) inlined into ../src/adapt_partobject.cpp(3587,13)
      remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3597,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3614,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3602,52)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3608,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3641,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3645,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3650,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3653,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3706,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3710,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3714,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3716,42) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::AddStateVecForAdjacentElements(PartObject *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, int, MPI_Comm) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3582,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3584,51) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(293,19) inlined into ../src/adapt_partobject.cpp(3587,13)
      remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3597,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3614,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3602,52)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3608,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3641,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3645,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3650,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3653,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3706,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3710,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3714,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3716,42) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::AddStateVecForAdjacentElements(PartObject *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &, int, MPI_Comm) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3619,46)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3648,54)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3582,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3584,51) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(293,19) inlined into ../src/adapt_partobject.cpp(3587,13)
      remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3597,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3614,49) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3602,52)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3608,17) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3641,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3645,57)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3650,17)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]

         LOOP BEGIN at ../src/adapt_partobject.cpp(3653,21)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3660,45) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3706,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3710,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3712,37) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3714,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3716,42) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::SetStateVec(PartObject *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, int)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3960,17)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into ../src/adapt_partobject.cpp(3961,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3961,17)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into ../src/adapt_partobject.cpp(3961,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3961,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3961,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3961,17)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetNode2ElementMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3732,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3735,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3736,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3739,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3741,39)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3749,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3751,35)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3753,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,67)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3760,29)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetNode2ElementMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3732,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3735,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3736,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3739,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3741,39)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3749,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3751,35)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3753,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,67)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3760,29)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetNode2ElementMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3732,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3735,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3736,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3739,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3741,39)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3749,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3751,35)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3753,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,67)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3760,29)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetNode2ElementMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3732,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3735,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3736,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3739,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3741,39)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3749,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3751,35)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3753,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,67)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3760,29)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetNode2ElementMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3738,37)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3732,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3735,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3736,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3739,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3741,39)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3749,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3751,35)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3753,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3754,67)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3760,29)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::~map(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1882,4)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::ReduceStateVecToVertices(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.590 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.157
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.590 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.590 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3777,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3786,38)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3791,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3803,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3805,5)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::ReduceStateVecToVertices(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.391
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 3.300 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.079
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 3.300 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.391
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 3.300 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3777,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3786,38)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3791,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3803,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3805,5)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::ReduceStateVecToVertices(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.079
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 3.200 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15389: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has unaligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.447
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 3.200 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3777,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3786,38)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3791,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3803,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3805,5)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::ReduceStateVecToVertices(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, int) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.093
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 3.200 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.371
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 3.200 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3777,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3786,38)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3791,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3803,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3805,5)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::ReduceStateVecToVertices(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, PartObject *, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.086
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 17.500 
   remark #15478: estimated potential speedup: 1.740 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,17) ]
   remark #15388: vectorization support: reference uval.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE[q] has aligned access   [ ../src/adapt_partobject.cpp(3800,27) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.308
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 17.500 
   remark #15478: estimated potential speedup: 1.740 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_partobject.cpp(3798,9)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3777,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3780,48)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3786,38)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3791,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(3793,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3803,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3805,5)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_Alloc_node>(std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_M_emplace_hint_unique<const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &>, std::tuple<>>(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::const_iterator, const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &> &&, std::tuple<> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::~map(std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2ConnectedVertMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3816,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3819,31) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3825,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3827,39) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3834,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3836,35) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3837,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3848,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3850,36) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3855,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3857,39) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3858,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,36)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,48)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,67)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3865,33)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3868,9)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2ConnectedVertMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3816,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3819,31) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3825,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3827,39) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3834,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3836,35) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3837,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3848,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3850,36) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3855,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3857,39) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3858,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,36)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,48)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,67)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3865,33)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3868,9)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2ConnectedVertMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3816,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3819,31) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3825,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3827,39) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3834,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3836,35) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3837,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3848,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3850,36) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3855,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3857,39) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3858,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,36)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,48)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,67)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3865,33)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3868,9)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2ConnectedVertMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3816,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3819,31) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3825,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3827,39) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3834,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3836,35) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3837,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3848,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3850,36) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3855,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3857,39) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3858,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,36)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,48)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,67)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3865,33)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3868,9)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PartObject::getElem2ConnectedVertMap(std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, PartObject *) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_partobject.cpp(3823,37)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(3816,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3819,31) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(3825,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3827,39) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3834,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3836,35) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3837,37)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,36)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3838,48)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/adapt_partobject.cpp(3848,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3850,36) ]

      LOOP BEGIN at ../src/adapt_partobject.cpp(3855,13)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(3857,39) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3858,41)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,36)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,48)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3859,67)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(3865,33)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_partobject.cpp(3868,9)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type>::_M_emplace_hint_unique<const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &>, std::tuple<>>(std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type>::const_iterator, const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &> &&, std::tuple<> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2431,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type>::_M_drop_node(std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type, std::_Select1st<std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::value_type>, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_compare, std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::_Pair_alloc_type>::_Link_type) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type>::_M_emplace_unique<std::pair<int, double>>(std::_Rb_tree<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_type, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type, std::_Select1st<std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::value_type>, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::key_compare, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::_Pair_alloc_type> *, std::pair<int, double> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2380,44)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::operator[](std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>> *, const std::map<int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>, std::less<int>, std::allocator<std::pair<const int, std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: PartObject::getGlobalElement2Rank(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3986,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3986,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3986,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetElement2TypeOnRankMap(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3990,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3990,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3990,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>>::insert<std::pair<int, double>>(std::map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>> *, std::pair<int, double> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(816,34)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.421
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.769
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.810 
   remark #15478: estimated potential speedup: 3.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::vector<int, std::allocator<int>>::pointer>::value_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 2.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::_Vector_base<int, std::allocator<int>>::pointer, const std::vector<int, std::allocator<int>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::_Vector_base<int, std::allocator<int>>::pointer, const std::vector<int, std::allocator<int>>::value_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.250
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::_Vector_base<int, std::allocator<int>>::pointer, const std::vector<int, std::allocator<int>>::value_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 4.190 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::_Vector_base<int, std::allocator<int>>::pointer, const std::vector<int, std::allocator<int>>::value_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(696,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(695,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.357
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::_Vector_base<double, std::allocator<double>>::pointer>::value_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.875
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetLocalTraceFace2LeftRight(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3982,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3982,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3982,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetLocalTraceVertsSet(std::set<int, std::less<int>, std::allocator<int>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3976,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3976,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3976,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::GetLocalTraceFacesSet(std::set<int, std::less<int>, std::allocator<int>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3971,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3971,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3971,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getTraceFacesOnRankMap(std::set<int, std::less<int>, std::allocator<int>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3950,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3950,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3950,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::getTraceVertsOnRankMap(std::set<int, std::less<int>, std::allocator<int>> *, PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into ../src/adapt_partobject.cpp(3945,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into ../src/adapt_partobject.cpp(3945,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into ../src/adapt_partobject.cpp(3945,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PartObject::GenerateTraceMap(PartObject *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_partobject.cpp(2476,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2484,42) ]

   LOOP BEGIN at ../src/adapt_partobject.cpp(2480,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_partobject.cpp(2484,42) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2486,33)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2489,31)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(2491,47)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2493,41)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at ../src/adapt_partobject.cpp(2494,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2496,46)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_partobject.cpp(2498,52)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_partobject.cpp(2500,55)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================
