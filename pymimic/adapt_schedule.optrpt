Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.3.304 Build 20200925_000000

Compiler options: -I/nobackupp19/dekelsch/Software/ParMmg/build/Mmg-prefix/src/Mmg-build/include -I/nobackupp19/dekelsch/Software/ParMmg/build/include -I/nobackupp19/dekelsch/parmetis-4.0.3/parmetis-install/include -I/nobackupp19/dekelsch/parmetis-4.0.3/metis/metis-install/include -I/nobackupp19/dekelsch/boost_1_71_0/boost-install/include -I/home1/dekelsch/Software/tinyxml -I/nobackupp19/dekelsch/CGNS-3.3.0/src/install/include -I/home1/dekelsch/local/lib/python3.12/site-packages/numpy/_core/include -I/home1/dekelsch/local/lib/python3.12/site-packages/mpi4py/include -I/home1/dekelsch/local/include/python3.12/ -std=c++17 -g -DMPI_NO_CPPBIND -fPIC -lm -lpthread -ldl -lutil -L/home1/dekelsch/local/lib/python3.12/ -O2 -Wall -axAVX,CORE-AVX2,CORE-AVX512 -qopt-report-phase=vec -qopt-report=5 -o PartiClass.so -L/nobackupp19/dekelsch/Software/ParMmg/build/Mmg-prefix/src/Mmg-build/lib -L/nobackupp19/dekelsch/Software/ParMmg/build/lib -L/nobackupp19/dekelsch/parmetis-4.0.3/parmetis-install/lib -L/nobackupp19/dekelsch/parmetis-4.0.3/metis/metis-install/lib -L/nobackupp19/dekelsch/boost_1_71_0/boost-install/stage/lib -L/home1/dekelsch/Software/tinyxml -L/nobackupp19/dekelsch/CGNS-3.3.0/src/install/lib -shared -lm -lpthread -ldl -lutil -L/home1/dekelsch/local/lib/python3.12/ -lmpi -lparmetis -lmetis -lhdf5 -mkl -lparmmg -lmmg -lcgns -lmpi

Begin optimization report for: DoScheduling(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset (40:9) and offset (41:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset (41:9) and offset (40:9)
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15389: vectorization support: reference sendNentityFromRank2Rank_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
   remark #15389: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15389: vectorization support: reference sendNentityFromRank2Rank_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15389: vectorization support: reference sendNentityFromRank2Rank_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_schedule.cpp(65,43)
   remark #15523: loop was not vectorized: loop control variable t was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(110,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at ../src/adapt_schedule.cpp(115,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(117,43)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(117,88)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
               remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

               LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
                  remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
               LOOP END
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,86)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DoScheduling(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset (40:9) and offset (41:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset (41:9) and offset (40:9)
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15389: vectorization support: reference sendNentityFromRank2Rank_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
   remark #15389: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15389: vectorization support: reference sendNentityFromRank2Rank_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15389: vectorization support: reference sendNentityFromRank2Rank_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_schedule.cpp(65,43)
   remark #15523: loop was not vectorized: loop control variable t was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(110,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at ../src/adapt_schedule.cpp(115,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(117,43)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(117,88)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
               remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

               LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
                  remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
               LOOP END
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,86)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DoScheduling(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15389: vectorization support: reference reduced_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15389: vectorization support: reference arr_nRank_RequestEntity[i] has unaligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset (40:9) and offset (41:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset (41:9) and offset (40:9)
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
   remark #15389: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15389: vectorization support: reference sendNentityFromRank2Rank_Global[i] has unaligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_schedule.cpp(65,43)
   remark #15523: loop was not vectorized: loop control variable t was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(110,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at ../src/adapt_schedule.cpp(115,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(117,43)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(117,88)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
               remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

               LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
                  remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
               LOOP END
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,86)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DoScheduling(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, MPI_Comm) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15388: vectorization support: reference reduced_nRank_RequestEntity[i] has aligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15388: vectorization support: reference arr_nRank_RequestEntity[i] has aligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
   remark #15388: vectorization support: reference reduced_nRank_RequestEntity[i] has aligned access   [ ../src/adapt_schedule.cpp(19,9) ]
   remark #15388: vectorization support: reference arr_nRank_RequestEntity[i] has aligned access   [ ../src/adapt_schedule.cpp(27,13) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(17,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset (40:9) and offset (41:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset (41:9) and offset (40:9)
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(38,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
   remark #15388: vectorization support: reference sendFromRank2Rank_Entity_Global[i] has aligned access   [ ../src/adapt_schedule.cpp(54,9) ]
   remark #15388: vectorization support: reference sendNentityFromRank2Rank_Global[i] has aligned access   [ ../src/adapt_schedule.cpp(55,9) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(52,5)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_schedule.cpp(65,43)
   remark #15523: loop was not vectorized: loop control variable t was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_schedule.cpp(110,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at ../src/adapt_schedule.cpp(115,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(117,43)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(117,88)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

            LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
               remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

               LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_schedule.cpp(119,42)
                  remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
               LOOP END
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into ../src/adapt_schedule.cpp(119,86)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_M_emplace_hint_unique<const std::piecewise_construct_t &, std::tuple<const std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type &>, std::tuple<>>(std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::const_iterator, const std::piecewise_construct_t &, std::tuple<const std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type &> &&, std::tuple<> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2431,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2431,6)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2431,6)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2431,6)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_M_drop_node(std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_type, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::value_type>, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::key_compare, std::map<int, std::set<int, std::less<int>, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::set<int, std::less<int>, std::allocator<int>>>>>::_Pair_alloc_type>::_Link_type) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_M_erase(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1880,4)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1880,4)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

         LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1880,4)
            remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================
