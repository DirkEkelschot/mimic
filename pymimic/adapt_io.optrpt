Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.3.304 Build 20200925_000000

Compiler options: -I/nobackupp19/dekelsch/Software/ParMmg/build/Mmg-prefix/src/Mmg-build/include -I/nobackupp19/dekelsch/Software/ParMmg/build/include -I/nobackupp19/dekelsch/parmetis-4.0.3/parmetis-install/include -I/nobackupp19/dekelsch/parmetis-4.0.3/metis/metis-install/include -I/nobackupp19/dekelsch/boost_1_71_0/boost-install/include -I/home1/dekelsch/Software/tinyxml -I/nobackupp19/dekelsch/CGNS-3.3.0/src/install/include -I/home1/dekelsch/local/lib/python3.12/site-packages/numpy/_core/include -I/home1/dekelsch/local/lib/python3.12/site-packages/mpi4py/include -I/home1/dekelsch/local/include/python3.12/ -std=c++17 -g -DMPI_NO_CPPBIND -fPIC -lm -lpthread -ldl -lutil -L/home1/dekelsch/local/lib/python3.12/ -O2 -Wall -axAVX,CORE-AVX2,CORE-AVX512 -qopt-report-phase=vec -qopt-report=5 -o PartiClass.so -L/nobackupp19/dekelsch/Software/ParMmg/build/Mmg-prefix/src/Mmg-build/lib -L/nobackupp19/dekelsch/Software/ParMmg/build/lib -L/nobackupp19/dekelsch/parmetis-4.0.3/parmetis-install/lib -L/nobackupp19/dekelsch/parmetis-4.0.3/metis/metis-install/lib -L/nobackupp19/dekelsch/boost_1_71_0/boost-install/stage/lib -L/home1/dekelsch/Software/tinyxml -L/nobackupp19/dekelsch/CGNS-3.3.0/src/install/lib -shared -lm -lpthread -ldl -lutil -L/home1/dekelsch/local/lib/python3.12/ -lmpi -lparmetis -lmetis -lhdf5 -mkl -lparmmg -lmmg -lcgns -lmpi

Begin optimization report for: ReadMetricInputs(std::vector<double, std::allocator<double>> *, const char *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_vector.h(1081,8) inlined into ../src/adapt_io.cpp(20,23)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(18,15) ]
LOOP END
===========================================================================

Begin optimization report for: WriteUS3DGridFromMMG_itN(MMG5_pMesh, MMG5_pSol, US3D *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(151,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between U533_V->data[i*U533_V->ncol] (22:13) and U533_V->data[i*U533_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between U533_V->data[i*U533_V->ncol+2] (22:13) and U533_V->data[i*U533_V->ncol] (22:13)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(66,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(71,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(90,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(95,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(123,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(127,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(250,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(254,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(340,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(344,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(478,27)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(481,20) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(504,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(508,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(683,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(687,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(953,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(957,33) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(961,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(965,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(967,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(975,43) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(985,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(989,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1042,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1045,39) ]
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::clear(std::set<int, std::less<int>, std::allocator<int>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(735,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::operator[](std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>> *, const std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(498,32)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_M_copy<std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Alloc_node>(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Const_Link_type, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Base_ptr, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::_M_drop_node(std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::_Link_type) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_tree.h(2165,33)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_tree.h(2170,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_tree.h(2176,35)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_tree.h(2186,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_tree.h(2192,35)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::_M_get_insert_unique_pos(std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_tree.h(2062,35)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_tree.h(2073,33)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::operator[](std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::push_back(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::pointer>(std::_Vector_base<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::pointer, std::_Vector_base<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::operator[](std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>> *, const std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_type, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type, std::_Select1st<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type>, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_compare, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::_Pair_alloc_type>::_M_drop_node(std::_Rb_tree<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_type, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type, std::_Select1st<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type>, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_compare, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_type, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type, std::_Select1st<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type>, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_compare, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::_Pair_alloc_type>::_Link_type) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::insert(std::set<int, std::less<int>, std::allocator<int>> *, const std::set<int, std::less<int>, std::allocator<int>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::find(std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>> *, const std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_set.h(777,26)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(777,26)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(777,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::insert(std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>> *, const std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_set.h(513,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::count(const std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>> *, const std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_type &) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1910,7) inlined into /usr/include/c++/8/bits/stl_set.h(750,26)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(750,26)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(750,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::erase(std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>> *, const std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1961,7) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1926,7) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2513,2) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(686,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_type, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::value_type, std::_Identity<std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::value_type>, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_compare, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::_Key_alloc_type>::_M_erase(std::_Rb_tree<std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_type, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::value_type, std::_Identity<std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::value_type>, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_compare, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::_Key_alloc_type> *, std::_Rb_tree<std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_type, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::value_type, std::_Identity<std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::value_type>, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::key_compare, std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::_Key_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1882,4)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_M_erase(std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type> *, std::_Rb_tree<std::set<int, std::less<int>, std::allocator<int>>::key_type, std::set<int, std::less<int>, std::allocator<int>>::value_type, std::_Identity<std::set<int, std::less<int>, std::allocator<int>>::value_type>, std::set<int, std::less<int>, std::allocator<int>>::key_compare, std::set<int, std::less<int>, std::allocator<int>>::_Key_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::erase(std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>> *, const std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1961,7) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1926,7) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2513,2) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1069,21)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type, std::_Select1st<std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::value_type>, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_compare, std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1882,4)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::find(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, const std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::find(std::set<int, std::less<int>, std::allocator<int>> *, const std::set<int, std::less<int>, std::allocator<int>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_set.h(777,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::find(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::~set(std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(282,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(282,7)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::~map(std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::~map(std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_type, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type, std::_Select1st<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type>, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_compare, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_type, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type, std::_Select1st<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type>, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_compare, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_type, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type, std::_Select1st<std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::value_type>, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::key_compare, std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_tree.h(1882,4)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: WriteUS3DGridFromMMG_it0(MMG5_pMesh, MMG5_pSol, US3D *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(1294,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between U564_V->data[i*U564_V->ncol] (22:13) and U564_V->data[i*U564_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between U564_V->data[i*U564_V->ncol+2] (22:13) and U564_V->data[i*U564_V->ncol] (22:13)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(1211,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1215,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1234,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1238,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1266,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1276,40) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1389,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1393,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1481,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1486,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1627,27)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1632,20) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1652,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1656,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(1834,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(1839,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2098,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2102,33) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2106,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2110,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2114,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2122,43) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(2138,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2142,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2199,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2202,39) ]
LOOP END
===========================================================================

Begin optimization report for: std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>>::clear(std::set<std::set<int, std::less<int>, std::allocator<int>>, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::set<int, std::less<int>, std::allocator<int>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(735,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(735,14)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::clear(std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>>::clear(std::map<int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::clear(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(1134,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: WriteUS3DGridFromMMG_it0_NEW(MMG5_pMesh, MMG5_pSol, US3D *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(2432,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20) and mmgMesh->quadra->v[i][_2] (2432:20)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->quadra->v[i][_2] (2432:20) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2504,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol] (22:13) and U595_V->data[i*U595_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol+2] (22:13) and U595_V->data[i*U595_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2751,8)
   remark #15389: vectorization support: reference f2p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2751:14) has aligned access   [ ../src/adapt_io.cpp(2751,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2757,8)
   remark #15389: vectorization support: reference f3p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2757:14) has aligned access   [ ../src/adapt_io.cpp(2757,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2763,8)
   remark #15389: vectorization support: reference f4p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2763:14) has aligned access   [ ../src/adapt_io.cpp(2763,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3117,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3170,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(2379,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2383,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2420,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2424,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2473,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2483,40) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2613,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2617,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2770,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2774,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2921,32)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2923,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2930,26)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2932,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3000,27)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3005,20) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3014,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3016,35) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3049,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3053,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3105,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3109,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3256,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3260,34) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3265,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3269,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3273,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3281,43) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3297,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3301,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3323,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3327,34) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3331,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3335,56) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3349,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3353,44) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3413,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3416,39) ]
LOOP END
===========================================================================

Begin optimization report for: WriteUS3DGridFromMMG_it0_NEW(MMG5_pMesh, MMG5_pSol, US3D *) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(2432,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20) and mmgMesh->quadra->v[i][_2] (2432:20)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->quadra->v[i][_2] (2432:20) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2504,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol] (22:13) and U595_V->data[i*U595_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol+2] (22:13) and U595_V->data[i*U595_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2751,8)
   remark #15389: vectorization support: reference f2p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2751:14) has aligned access   [ ../src/adapt_io.cpp(2751,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2757,8)
   remark #15389: vectorization support: reference f3p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2757:14) has aligned access   [ ../src/adapt_io.cpp(2757,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2763,8)
   remark #15389: vectorization support: reference f4p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2763:14) has aligned access   [ ../src/adapt_io.cpp(2763,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3117,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3170,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(2379,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2383,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2420,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2424,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2473,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2483,40) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2613,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2617,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2770,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2774,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2921,32)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2923,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2930,26)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2932,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3000,27)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3005,20) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3014,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3016,35) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3049,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3053,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3105,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3109,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3256,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3260,34) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3265,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3269,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3273,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3281,43) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3297,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3301,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3323,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3327,34) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3331,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3335,56) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3349,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3353,44) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3413,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3416,39) ]
LOOP END
===========================================================================

Begin optimization report for: WriteUS3DGridFromMMG_it0_NEW(MMG5_pMesh, MMG5_pSol, US3D *) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(2432,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20) and mmgMesh->quadra->v[i][_2] (2432:20)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->quadra->v[i][_2] (2432:20) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2504,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol] (22:13) and U595_V->data[i*U595_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol+2] (22:13) and U595_V->data[i*U595_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2751,8)
   remark #15389: vectorization support: reference f2p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2751:14) has aligned access   [ ../src/adapt_io.cpp(2751,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2757,8)
   remark #15389: vectorization support: reference f3p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2757:14) has aligned access   [ ../src/adapt_io.cpp(2757,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2763,8)
   remark #15389: vectorization support: reference f4p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2763:14) has aligned access   [ ../src/adapt_io.cpp(2763,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3117,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3170,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(2379,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2383,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2420,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2424,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2473,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2483,40) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2613,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2617,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2770,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2774,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2921,32)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2923,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2930,26)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2932,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3000,27)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3005,20) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3014,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3016,35) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3049,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3053,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3105,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3109,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3256,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3260,34) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3265,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3269,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3273,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3281,43) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3297,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3301,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3323,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3327,34) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3331,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3335,56) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3349,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3353,44) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3413,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3416,39) ]
LOOP END
===========================================================================

Begin optimization report for: WriteUS3DGridFromMMG_it0_NEW(MMG5_pMesh, MMG5_pSol, US3D *) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(2432,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20) and mmgMesh->quadra->v[i][_2] (2432:20)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->quadra->v[i][_2] (2432:20) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2432:20)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2504,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol] (22:13) and U595_V->data[i*U595_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between U595_V->data[i*U595_V->ncol+2] (22:13) and U595_V->data[i*U595_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2751,8)
   remark #15389: vectorization support: reference f2p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2751:14) has aligned access   [ ../src/adapt_io.cpp(2751,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2757,8)
   remark #15389: vectorization support: reference f3p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2757:14) has aligned access   [ ../src/adapt_io.cpp(2757,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2763,8)
   remark #15389: vectorization support: reference f4p.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[_2] has unaligned access
   remark #15388: vectorization support: reference at (2763:14) has aligned access   [ ../src/adapt_io.cpp(2763,14) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (2782:24) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (2782:24)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2780,13)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3117,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3119:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3119:29)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3170,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29) and mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29)
   remark #15346: vector dependence: assumed ANTI dependence between mmgMesh->prism->v[i][*((loc_faces_prism.__b_St12_Vector_baseISt6 (3172:29) and faceVec.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiE (3172:29)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(2379,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2383,22) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2420,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2424,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2473,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2483,40) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2613,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2617,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2619,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2770,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2774,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2778,38) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(2921,32)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2923,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(2930,26)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(2932,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3000,27)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3005,20) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3014,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3016,35) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3049,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3053,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3055,39) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3105,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3109,10)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3115,43) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3256,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3260,34) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3265,38)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3269,33) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3273,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3281,43) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3297,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3301,42) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3323,41)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3327,34) ]

   LOOP BEGIN at ../src/adapt_io.cpp(3331,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3335,56) ]
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(3349,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3353,44) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(3413,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3416,39) ]
LOOP END
===========================================================================

Begin optimization report for: std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>>::insert(std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>> *, const std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/hashtable.h(1560,5) inlined into /usr/include/c++/8/bits/unordered_set.h(422,28)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/hashtable.h(2109,7) inlined into /usr/include/c++/8/bits/unordered_set.h(422,28)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::find(std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>> *, const std::map<std::set<int, std::less<int>, std::allocator<int>>, int, std::less<std::set<int, std::less<int>, std::allocator<int>>>, std::allocator<std::pair<const std::set<int, std::less<int>, std::allocator<int>>, int>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(880,23) inlined into /usr/include/c++/8/bits/stl_map.h(1170,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(233,7) inlined into /usr/include/c++/8/bits/char_traits.h(327,6)
   remark #15523: loop was not vectorized: loop control variable __s was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(165,7) inlined into /usr/include/c++/8/bits/char_traits.h(328,11)
   remark #15523: loop was not vectorized: loop control variable __i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>>::find(std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>> *, const std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/hashtable.h(1560,5) inlined into /usr/include/c++/8/bits/unordered_set.h(651,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>::push_back(std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>> *, const std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(1086,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<FaceSharedPtr, std::allocator<FaceSharedPtr>>::pointer>(std::_Vector_base<FaceSharedPtr, std::allocator<FaceSharedPtr>>::pointer, std::_Vector_base<FaceSharedPtr, std::allocator<FaceSharedPtr>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::operator[](std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>> *, const std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_type, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type, std::_Select1st<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type>, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_compare, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::_Pair_alloc_type>::_M_drop_node(std::_Rb_tree<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_type, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type, std::_Select1st<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type>, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_compare, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_type, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type, std::_Select1st<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type>, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_compare, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::_Pair_alloc_type>::_Link_type) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_tree.h(659,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>>::~unordered_set(std::unordered_set<FaceSharedPtr, FaceHashPointer, std::equal_to<FaceSharedPtr>, std::allocator<FaceSharedPtr>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/hashtable_policy.h(2120,7) inlined into /usr/include/c++/8/bits/unordered_set.h(98,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::~map(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::~map(std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_type, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type, std::_Select1st<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type>, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_compare, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_type, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type, std::_Select1st<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type>, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_compare, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_type, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type, std::_Select1st<std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::value_type>, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::key_compare, std::map<int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>, std::less<int>, std::allocator<std::pair<const int, std::vector<FaceSharedPtr, std::allocator<FaceSharedPtr>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_tree.h(1882,4)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::set<int, std::less<int>, std::allocator<int>>::~set(std::set<int, std::less<int>, std::allocator<int>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_set.h(282,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ProvideBoundaryRef(int, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(3885,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshDataWithMetric(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4219,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4225,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4225,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.436
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.812
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.436
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4280:9) and offset_tetC (4281:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4281:9) and offset_tetC (4280:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18) and rank (4294:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4294:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4364,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4388,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(3979,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3982,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4002,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4006,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4033,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4036,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4069,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4075,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4077,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4085,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4106,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4113,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4122,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4124,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4126,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4170,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4175,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4344,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4382,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4387,36) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshDataWithMetric(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4219,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4225,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4225,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.459
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.433
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.459
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4280:9) and offset_tetC (4281:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4281:9) and offset_tetC (4280:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18) and rank (4294:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4294:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4364,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4388,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(3979,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3982,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4002,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4006,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4033,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4036,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4069,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4075,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4077,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4085,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4106,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4113,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4122,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4124,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4126,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4170,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4175,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4344,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4382,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4387,36) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshDataWithMetric(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4219,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4225,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4225,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.433
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 6.130 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.778
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 6.130 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4280:9) and offset_tetC (4281:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4281:9) and offset_tetC (4280:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18) and rank (4294:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4294:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4364,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4388,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(3979,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3982,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4002,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4006,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4033,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4036,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4069,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4075,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4077,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4085,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4106,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4113,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4122,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4124,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4126,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4170,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4175,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4344,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4382,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4387,36) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshDataWithMetric(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4219,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4225,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4225,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.650
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.530 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.778
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.530 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.250 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4280:9) and offset_tetC (4281:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4281:9) and offset_tetC (4280:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18) and rank (4294:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4294:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4364,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4388,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(3979,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3982,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4002,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4006,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4033,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4036,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4069,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4075,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4077,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4085,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4106,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4113,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4122,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4124,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4126,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4170,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4175,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4344,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4382,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4387,36) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshDataWithMetric(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4219,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4225,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4225,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15388: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has aligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.211
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 1.550 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4230,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4232,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4232,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.640
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 1.550 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4238:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4238:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4236,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Distributed chunk1>
   remark #15388: vectorization support: reference colTetCount[i] has aligned access   [ ../src/adapt_io.cpp(4267,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(4268,9) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4265,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4280:9) and offset_tetC (4281:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4281:9) and offset_tetC (4280:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4278,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18) and rank (4294:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4294:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4290:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4288,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4360:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4360:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4358,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4364,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4366:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4366:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4388,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (4390:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4390:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(3979,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(3982,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4002,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4006,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4033,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4036,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4069,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4075,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4077,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4085,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4106,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4113,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4122,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4124,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4126,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4170,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4175,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4344,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4382,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4387,36) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(4437,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::~_Rb_tree(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(973,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Rb_tree(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(948,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Alloc_node>(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::operator[](std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, const std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: ProvideBoundaryID(int, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(3864,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::operator[](std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>> *, const std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::operator[](std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>> *, const std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/basic_string.h(180,16) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(498,32)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(498,32)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_map.h(498,32)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2165,33)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2165,33)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2165,33)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2168,38)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2168,38)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2168,38)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2168,38)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2168,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2168,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2168,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2170,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2170,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2170,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2176,35)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2176,35)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2176,35)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2184,38)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2184,38)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2184,38)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2184,38)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2184,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2184,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2184,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2186,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2186,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2186,38)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2192,35)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2192,35)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2192,35)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_M_get_insert_unique_pos(std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2062,35)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2062,35)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2062,35)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2073,33)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2073,33)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_tree.h(2073,33)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::operator[](std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>> *, const std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::operator[](std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>> *, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/basic_string.h(180,16) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(518,32)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(518,32)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_map.h(518,32)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(251,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(252,2) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(309,6) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/8/bits/char_traits.h(312,13) ]
LOOP END
===========================================================================

Begin optimization report for: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string<std::_RequireAllocator<std::allocator<char>>>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, const std::allocator<char> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(233,7) inlined into /usr/include/c++/8/bits/basic_string.h(521,39)
   remark #15523: loop was not vectorized: loop control variable __s was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/char_traits.h(165,7) inlined into /usr/include/c++/8/bits/basic_string.h(521,39)
   remark #15523: loop was not vectorized: loop control variable __i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::_M_erase_at_end(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::pointer) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(1659,6)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.421
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.769
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.810 
   remark #15478: estimated potential speedup: 3.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::value_type &, const std::vector<int, std::allocator<int>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 2.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::~_Rb_tree(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(973,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::operator=(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1751,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::operator=(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1751,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type, std::_Select1st<std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::value_type>, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_compare, std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetSizeFromFileInParallel(std::vector<int, std::allocator<int>> *, const char *, const char *, MPI_Comm, MPI_Info)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
<Remainder loop for vectorization>
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.070 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetSizeFromFileInParallel(std::vector<int, std::allocator<int>> *, const char *, const char *, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
<Remainder loop for vectorization>
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.070 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetSizeFromFileInParallel(std::vector<int, std::allocator<int>> *, const char *, const char *, MPI_Comm, MPI_Info) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetSizeFromFileInParallel(std::vector<int, std::allocator<int>> *, const char *, const char *, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.357
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 0.680 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetSizeFromFileInParallel(std::vector<int, std::allocator<int>> *, const char *, const char *, MPI_Comm, MPI_Info) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5584,39)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.357
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 0.680 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, MPI_Comm, MPI_Info)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, MPI_Comm, MPI_Info)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, MPI_Comm, MPI_Info) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(815,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(819,38)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(823,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(824,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(824,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(820,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGhostCellsFromRun_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(405,39)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(410,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(406,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGhostCellsFromRun_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(405,39)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(410,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(406,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGhostCellsFromRun_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(405,39)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(410,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(406,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGhostCellsFromRun_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(405,39)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(410,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(406,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGhostCellsFromRun_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(405,39)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(409,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(410,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(410,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(406,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromGroupFromFile_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(165,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26) and A_t[i*type_size+j] (171:26)
   remark #15346: vector dependence: assumed ANTI dependence between A_t[i*type_size+j] (171:26) and A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26)
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(186,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(190,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(166,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(187,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromGroupFromFile_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, const char *) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(165,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26) and A_t[i*type_size+j] (171:26)
   remark #15346: vector dependence: assumed ANTI dependence between A_t[i*type_size+j] (171:26) and A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26)
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(186,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(190,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(166,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(187,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromGroupFromFile_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, const char *) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(165,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26) and A_t[i*type_size+j] (171:26)
   remark #15346: vector dependence: assumed ANTI dependence between A_t[i*type_size+j] (171:26) and A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26)
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(186,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(190,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(166,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(187,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromGroupFromFile_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, const char *) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(165,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26) and A_t[i*type_size+j] (171:26)
   remark #15346: vector dependence: assumed ANTI dependence between A_t[i*type_size+j] (171:26) and A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26)
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(186,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(190,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(166,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(187,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromGroupFromFile_Lite<int>(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const char *, const char *, const char *) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(165,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(169,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26) and A_t[i*type_size+j] (171:26)
   remark #15346: vector dependence: assumed ANTI dependence between A_t[i*type_size+j] (171:26) and A_tretrow.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (171:26)
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(186,47)
   remark #15382: vectorization support: call to function std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(190,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(190,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(190,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(166,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(186,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(187,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromGroupFromFile_Lite<char>(std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>> *, const char *, const char *, const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(165,47)
   remark #15382: vectorization support: call to function std::vector<char, std::allocator<char>>::vector(std::vector<char, std::allocator<char>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between A_tretrow.__b_St12_Vector_baseIcSaIcEE.__b_St12_Vector_baseIcSaI (171:26) and A_tretrow.__b_St12_Vector_baseIcSaIcEE.__b_St12_Vector_baseIcSaI (171:26)
LOOP END

LOOP BEGIN at ../src/adapt_io.h(169,13)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into ../src/adapt_io.h(165,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at ../src/adapt_io.h(166,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::vector(std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>> *, const std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(464,4)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::operator=(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/vector.tcc(215,24)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/vector.tcc(217,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(322,4) inlined into /usr/include/c++/8/bits/vector.tcc(227,56)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,19) inlined into /usr/include/c++/8/bits/vector.tcc(227,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(322,4) inlined into /usr/include/c++/8/bits/vector.tcc(232,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,8) inlined into /usr/include/c++/8/bits/vector.tcc(234,8)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::operator=(std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>> *, const std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/vector.tcc(215,24)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/vector.tcc(217,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(322,4) inlined into /usr/include/c++/8/bits/vector.tcc(227,56)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,19) inlined into /usr/include/c++/8/bits/vector.tcc(227,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(322,4) inlined into /usr/include/c++/8/bits/vector.tcc(232,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,8) inlined into /usr/include/c++/8/bits/vector.tcc(234,8)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::operator=(std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1751,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::operator=(std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1751,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::operator=(std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1751,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type, std::_Select1st<std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::value_type>, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_compare, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::_Pair_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_erase_at_end(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(1659,6)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::~_Rb_tree(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(973,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::~_Rb_tree(std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(973,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::vector(std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>> *, std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::size_type, const std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15382: vectorization support: call to function std::vector<char, std::allocator<char>>::vector(std::vector<char, std::allocator<char>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::vector(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *, const std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(82,23) inlined into /usr/include/c++/8/bits/stl_vector.h(464,4)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_construct.h(75,42) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::~vector(std::vector<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(568,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::~vector(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(568,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshData(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4563,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19) and *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19)
   remark #15346: vector dependence: assumed ANTI dependence between *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4836,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4842,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4842,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.436
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.812
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.436
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4897:9) and offset_tetC (4898:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4898:9) and offset_tetC (4897:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18) and rank (4911:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4911:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4981,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5005,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(4522,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4531,46) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4578,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4581,21) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4591,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4601,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4615,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4627,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4650,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4653,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4686,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4692,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4694,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4702,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4723,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4730,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4739,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4741,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4743,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4787,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4792,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4961,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4966,50) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4999,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5004,36) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshData(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4563,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19) and *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19)
   remark #15346: vector dependence: assumed ANTI dependence between *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4836,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4842,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4842,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.459
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.433
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.459
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4897:9) and offset_tetC (4898:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4898:9) and offset_tetC (4897:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18) and rank (4911:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4911:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4981,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5005,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(4522,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4531,46) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4578,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4581,21) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4591,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4601,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4615,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4627,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4650,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4653,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4686,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4692,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4694,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4702,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4723,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4730,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4739,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4741,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4743,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4787,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4792,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4961,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4966,50) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4999,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5004,36) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshData(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4563,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19) and *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19)
   remark #15346: vector dependence: assumed ANTI dependence between *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4836,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4842,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4842,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.433
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 6.130 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.778
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 6.130 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4897:9) and offset_tetC (4898:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4898:9) and offset_tetC (4897:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18) and rank (4911:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4911:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4981,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5005,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(4522,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4531,46) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4578,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4581,21) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4591,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4601,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4615,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4627,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4650,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4653,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4686,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4692,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4694,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4702,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4723,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4730,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4739,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4741,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4743,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4787,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4792,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4961,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4966,50) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4999,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5004,36) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshData(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4563,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19) and *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19)
   remark #15346: vector dependence: assumed ANTI dependence between *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4836,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4842,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4842,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.650
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.530 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.778
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.530 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.250 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4897:9) and offset_tetC (4898:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4898:9) and offset_tetC (4897:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18) and rank (4911:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4911:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4981,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5005,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(4522,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4531,46) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4578,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4581,21) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4591,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4601,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4615,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4627,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4650,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4653,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4686,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4692,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4694,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4702,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4723,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4730,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4739,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4741,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4743,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4787,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4792,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4961,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4966,50) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4999,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5004,36) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMeshData(const char *, const char *, const char *, int, int, int, MPI_Comm, MPI_Info) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(4563,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19) and *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19)
   remark #15346: vector dependence: assumed ANTI dependence between *((stats.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12 (4569:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (4569:19)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4836,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(4842,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4842,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15388: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has aligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.211
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 1.550 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4847,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(4849,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(4849,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.640
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 1.550 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4855:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4855:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4853,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Distributed chunk1>
   remark #15388: vectorization support: reference colTetCount[i] has aligned access   [ ../src/adapt_io.cpp(4884,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(4885,9) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4882,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (4897:9) and offset_tetC (4898:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (4898:9) and offset_tetC (4897:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4895,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18) and rank (4911:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (4911:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (4907:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4905,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4977:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4977:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4975,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4981,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (4983:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (4983:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5005,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5007:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5007:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(4522,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4531,46) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4578,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4581,21) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4591,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4601,48) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4615,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4627,41) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4650,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4653,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4686,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4692,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4694,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4702,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4723,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4730,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4739,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4741,52) ]

   LOOP BEGIN at ../src/adapt_io.cpp(4743,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4787,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4792,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4961,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(4966,50) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(4999,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5004,36) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::operator[](std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(496,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(502,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.357
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.875
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::map(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, const std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_map.h(206,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(206,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(206,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::~map(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(568,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>>::clear(std::vector<std::vector<int, std::allocator<int>>, std::allocator<std::vector<int, std::allocator<int>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(1387,9)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::~map(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::operator=(std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, const std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_M_copy<std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node>(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Base_ptr, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1842,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1854,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node::~_Reuse_or_alloc_node(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Reuse_or_alloc_node *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(482,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::operator=(std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::operator=(std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> *, const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::operator=(std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>> *, const std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::operator=(std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>> *, const std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::operator=(std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>> *, const std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(318,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::clear(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4) inlined into /usr/include/c++/8/bits/stl_vector.h(1387,9)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::~map(std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::~map(std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::~map(std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>> *) noexcept

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_map.h(301,7)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromRunInFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(643,37)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(648,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(644,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromRunInFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(643,37)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(648,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(644,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromRunInFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(643,37)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(648,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(644,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromRunInFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(643,37)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(648,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(644,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: ReadDataSetFromRunInFileInParallel_Lite<double>(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.h(643,37)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.h(647,30)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.h(648,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/adapt_io.h(648,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.h(644,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/ext/new_allocator.h(111,27) ]
LOOP END
===========================================================================

Begin optimization report for: std::max_element<std::vector<double, std::allocator<double>>::iterator>(std::vector<double, std::allocator<double>>::iterator, std::vector<double, std::allocator<double>>::iterator)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into /usr/include/c++/8/bits/stl_algo.h(5685,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into /usr/include/c++/8/bits/stl_algo.h(5685,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type, const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into /usr/include/c++/8/bits/stl_vector.h(418,9)
   remark #15382: vectorization support: call to function std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMesh(const char *, const char *, int, int, MPI_Comm, MPI_Info)

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DMeshPKcS0_iijj:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.cpp(5199,55)
   remark #15382: vectorization support: call to function std::vector<char, std::allocator<char>>::vector(std::vector<char, std::allocator<char>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5316,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(5322,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5322,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.436
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.812
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.436
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 12.890 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (5377:9) and offset_tetC (5378:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (5378:9) and offset_tetC (5377:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18) and rank (5391:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (5391:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5461,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5484,36)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15553: loop was not vectorized: number of iterations (3) is insufficient for vectorization
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 0.800 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5485,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5130,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5133,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5166,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5172,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5174,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5182,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5203,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5210,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5219,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5223,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5267,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5272,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5441,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5479,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMesh(const char *, const char *, int, int, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DMeshPKcS0_iijj.a:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.cpp(5199,55)
   remark #15382: vectorization support: call to function std::vector<char, std::allocator<char>>::vector(std::vector<char, std::allocator<char>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5316,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(5322,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5322,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.459
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.433
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.459
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 7.340 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (5377:9) and offset_tetC (5378:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (5378:9) and offset_tetC (5377:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18) and rank (5391:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (5391:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5461,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5484,36)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15553: loop was not vectorized: number of iterations (3) is insufficient for vectorization
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 0.800 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5485,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5130,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5133,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5166,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5172,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5174,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5182,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5203,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5210,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5219,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5223,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5267,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5272,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5441,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5479,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMesh(const char *, const char *, int, int, MPI_Comm, MPI_Info) [haswell]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DMeshPKcS0_iijj.V:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.cpp(5199,55)
   remark #15382: vectorization support: call to function std::vector<char, std::allocator<char>>::vector(std::vector<char, std::allocator<char>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5316,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(5322,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5322,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.433
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 6.130 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has unaligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.778
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 1.870 
   remark #15478: estimated potential speedup: 6.130 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (5377:9) and offset_tetC (5378:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (5378:9) and offset_tetC (5377:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18) and rank (5391:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (5391:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5461,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5484,36)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 0.800 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5485,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5130,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5133,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5166,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5172,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5174,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5182,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5203,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5210,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5219,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5223,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5267,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5272,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5441,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5479,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMesh(const char *, const char *, int, int, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DMeshPKcS0_iijj.R:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.cpp(5199,55)
   remark #15382: vectorization support: call to function std::vector<char, std::allocator<char>>::vector(std::vector<char, std::allocator<char>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5316,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(5322,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5322,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.650
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.530 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.778
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.530 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.250 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (5377:9) and offset_tetC (5378:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (5378:9) and offset_tetC (5377:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18) and rank (5391:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (5391:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5461,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5484,36)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 0.750 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5485,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5130,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5133,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5166,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5172,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5174,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5182,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5203,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5210,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5219,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5223,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5267,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5272,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5441,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5479,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DMesh(const char *, const char *, int, int, MPI_Comm, MPI_Info) [generic]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DMeshPKcS0_iijj.A:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_uninitialized.h(526,8) inlined into ../src/adapt_io.cpp(5199,55)
   remark #15382: vectorization support: call to function std::vector<char, std::allocator<char>>::vector(std::vector<char, std::allocator<char>> *) noexcept(true) cannot be vectorized   [ /usr/include/c++/8/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5316,9)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(5322,27) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5322,27) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15388: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has aligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.211
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 1.550 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5327,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference ief_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[j] has aligned access   [ ../src/adapt_io.cpp(5329,25) ]
   remark #15389: vectorization support: reference ((ief.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE+i*24)->_M_start)[j+1] has unaligned access   [ ../src/adapt_io.cpp(5329,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.640
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 1.550 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25) and ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((iee.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5335:25) and iee_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5335:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5333,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Distributed chunk1>
   remark #15388: vectorization support: reference colTetCount[i] has aligned access   [ ../src/adapt_io.cpp(5364,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(5365,9) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5362,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (5377:9) and offset_tetC (5378:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (5378:9) and offset_tetC (5377:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5375,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18) and rank (5391:22)
   remark #15346: vector dependence: assumed ANTI dependence between rank (5391:22) and ie_tetCnt.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaI (5387:18)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5385,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25) and ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ifn.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5457:25) and ifn_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5457:25)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5455,9)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5461,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25) and ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25)
   remark #15346: vector dependence: assumed ANTI dependence between ((ife.__b_St12_Vector_baseISt6vectorIiSaIiEESaIS2_EE.__b_St12_Ve (5463:25) and ife_copy_row.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIi (5463:25)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5484,36)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.833
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.800 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5485,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19) and ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19)
   remark #15346: vector dependence: assumed ANTI dependence between ((xcn.__b_St12_Vector_baseISt6vectorIdSaIdEESaIS2_EE.__b_St12_Ve (5487:19) and coords.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5487:19)
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5130,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5133,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5166,25)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5172,49) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5174,37)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5182,25) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5203,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5210,29)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5219,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5223,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5267,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5272,17) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5441,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5479,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(258,7) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type>::operator=(std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> *, const std::_Rb_tree<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type, std::_Select1st<std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::value_type>, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_compare, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::_Pair_alloc_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1851,6) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_pair.h(303,17) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(521,9) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(114,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(128,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1750,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into /usr/include/c++/8/bits/stl_tree.h(1751,2)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type, std::_Select1st<std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::value_type>, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_compare, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DData(const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info)

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DDataPKcS0_S0_iijj:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U657_V->data[u*U657_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U657_V->data[u*U657_V->ncol+2] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.870 
      remark #15478: estimated potential speedup: 1.920 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5698,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19) and stats->data[u*stats->ncol] (5704:19)
   remark #15346: vector dependence: assumed ANTI dependence between stats->data[u*stats->ncol] (5704:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5712,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol] (22:13) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13) and U655_V->data[u*U655_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5729,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U65b_V->data[u*U65b_V->ncol] (22:13) and readdata->data[u*readdata->ncol+Tid] (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between readdata->data[u*readdata->ncol+Tid] (22:13) and U65b_V->data[u*U65b_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5860,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5872,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5884,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_array.h(22,13) inlined into ../src/adapt_io.cpp(5932,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_array.h(26,21) inlined into ../src/adapt_io.cpp(5936,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5967,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between iet->ncol (5969:9) and U642_V->data[i*U642_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol] (22:13) and iet->ncol (5969:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6021:9) and offset_tetC (6022:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6022:9) and offset_tetC (6021:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U64f_V->ncol (22:13) and U64f_V->data[i*U64f_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U64f_V->data[i*U64f_V->ncol] (22:13) and U64f_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5626,29)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5628,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5767,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(1091,9) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5799,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5805,44) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5807,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5815,22) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5831,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5836,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5843,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ ../src/adapt_io.cpp(5846,36) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5846,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5909,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DData(const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.a:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U657_V->data[u*U657_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U657_V->data[u*U657_V->ncol+2] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5698,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19) and stats->data[u*stats->ncol] (5704:19)
   remark #15346: vector dependence: assumed ANTI dependence between stats->data[u*stats->ncol] (5704:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5712,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol] (22:13) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13) and U655_V->data[u*U655_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5729,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U65b_V->data[u*U65b_V->ncol] (22:13) and readdata->data[u*readdata->ncol+Tid] (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between readdata->data[u*readdata->ncol+Tid] (22:13) and U65b_V->data[u*U65b_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5860,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5872,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5884,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_array.h(22,13) inlined into ../src/adapt_io.cpp(5932,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_array.h(26,21) inlined into ../src/adapt_io.cpp(5936,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5967,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between iet->ncol (5969:9) and U642_V->data[i*U642_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol] (22:13) and iet->ncol (5969:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6021:9) and offset_tetC (6022:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6022:9) and offset_tetC (6021:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U64f_V->ncol (22:13) and U64f_V->data[i*U64f_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U64f_V->data[i*U64f_V->ncol] (22:13) and U64f_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5626,29)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5628,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5767,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(1091,9) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5799,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5805,44) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5807,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5815,22) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5831,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5836,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5843,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ ../src/adapt_io.cpp(5846,36) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5846,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5909,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DData(const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [haswell]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.V:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U657_V->data[u*U657_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U657_V->data[u*U657_V->ncol+2] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.364
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5698,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19) and stats->data[u*stats->ncol] (5704:19)
   remark #15346: vector dependence: assumed ANTI dependence between stats->data[u*stats->ncol] (5704:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5712,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol] (22:13) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13) and U655_V->data[u*U655_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5729,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U65b_V->data[u*U65b_V->ncol] (22:13) and readdata->data[u*readdata->ncol+Tid] (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between readdata->data[u*readdata->ncol+Tid] (22:13) and U65b_V->data[u*U65b_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5860,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5872,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5884,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_array.h(22,13) inlined into ../src/adapt_io.cpp(5932,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_array.h(26,21) inlined into ../src/adapt_io.cpp(5936,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5967,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between iet->ncol (5969:9) and U642_V->data[i*U642_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol] (22:13) and iet->ncol (5969:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6021:9) and offset_tetC (6022:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6022:9) and offset_tetC (6021:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U64f_V->ncol (22:13) and U64f_V->data[i*U64f_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U64f_V->data[i*U64f_V->ncol] (22:13) and U64f_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5626,29)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5628,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5767,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(1091,9) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5799,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5805,44) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5807,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5815,22) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5831,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5836,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5843,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ ../src/adapt_io.cpp(5846,36) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5846,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5909,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DData(const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [core_2nd_gen_avx]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.R:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U657_V->data[u*U657_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U657_V->data[u*U657_V->ncol+2] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.625
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5698,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19) and stats->data[u*stats->ncol] (5704:19)
   remark #15346: vector dependence: assumed ANTI dependence between stats->data[u*stats->ncol] (5704:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5712,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol] (22:13) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13) and U655_V->data[u*U655_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5729,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U65b_V->data[u*U65b_V->ncol] (22:13) and readdata->data[u*readdata->ncol+Tid] (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between readdata->data[u*readdata->ncol+Tid] (22:13) and U65b_V->data[u*U65b_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5860,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5872,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5884,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_array.h(22,13) inlined into ../src/adapt_io.cpp(5932,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_array.h(26,21) inlined into ../src/adapt_io.cpp(5936,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5967,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between iet->ncol (5969:9) and U642_V->data[i*U642_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol] (22:13) and iet->ncol (5969:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.250 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6021:9) and offset_tetC (6022:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6022:9) and offset_tetC (6021:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U64f_V->ncol (22:13) and U64f_V->data[i*U64f_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U64f_V->data[i*U64f_V->ncol] (22:13) and U64f_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5626,29)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5628,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5767,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(1091,9) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5799,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5805,44) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5807,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5815,22) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5831,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5836,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5843,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ ../src/adapt_io.cpp(5846,36) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5846,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5909,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DData(const char *, const char *, const char *, int, int, MPI_Comm, MPI_Info) [generic]

    Report from: Code generation optimizations [cg]

/usr/include/c++/8/bits/basic_string.h(686:32)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(687:28)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(689:20)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(690:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(691:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(692:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(693:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(694:5)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(680:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:15)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(681:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing

/usr/include/c++/8/bits/basic_string.h(682:7)::_Z12ReadUS3DDataPKcS0_S0_iijj.A:  Assume directive not useful: removing


    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U655_V->data[u*U655_V->ncol+1] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol+1] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5665,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mean->data[u*mean->ncol+uid] (5669:13) and U657_V->data[u*U657_V->ncol+2] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U657_V->data[u*U657_V->ncol+2] (22:13) and mean->data[u*mean->ncol+uid] (5669:13)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.170 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/adapt_io.cpp(5697,36)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5698,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19) and stats->data[u*stats->ncol] (5704:19)
   remark #15346: vector dependence: assumed ANTI dependence between stats->data[u*stats->ncol] (5704:19) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (5704:19)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed FLOW dependence between __result._M_current (5660:15) and __result._M_current (5659:2)
   remark #15346: vector dependence: assumed ANTI dependence between __result._M_current (5659:2) and __result._M_current (5660:15)
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(5658,7) inlined into ../src/adapt_io.cpp(5708,58)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5712,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U655_V->data[u*U655_V->ncol] (22:13) and tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between tkevec.__b_St12_Vector_baseIdSaIdEE.__b_St12_Vector_baseIdSaIdEE (22:13) and U655_V->data[u*U655_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5729,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U65b_V->data[u*U65b_V->ncol] (22:13) and readdata->data[u*readdata->ncol+Tid] (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between readdata->data[u*readdata->ncol+Tid] (22:13) and U65b_V->data[u*U65b_V->ncol] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5860,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5862,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5872,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5874,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5884,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(5886,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_array.h(22,13) inlined into ../src/adapt_io.cpp(5932,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_array.h(26,21) inlined into ../src/adapt_io.cpp(5936,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol+j] (22:13) and U642_V->ncol (22:13)
   remark #15346: vector dependence: assumed ANTI dependence between U642_V->ncol (22:13) and U642_V->data[i*U642_V->ncol+j] (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5967,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between iet->ncol (5969:9) and U642_V->data[i*U642_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U642_V->data[i*U642_V->ncol] (22:13) and iet->ncol (5969:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Distributed chunk1>
   remark #15388: vectorization support: reference colTetCount[i] has aligned access   [ ../src/adapt_io.cpp(6007,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(6008,9) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6005,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6021:9) and offset_tetC (6022:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6022:9) and offset_tetC (6021:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6019,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U64f_V->ncol (22:13) and U64f_V->data[i*U64f_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U64f_V->data[i*U64f_V->ncol] (22:13) and U64f_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6029,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(5626,29)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5628,15) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5767,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_vector.h(1091,9) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5799,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5805,44) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5807,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(5815,22) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5831,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5836,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5843,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ ../src/adapt_io.cpp(5846,36) ]

   LOOP BEGIN at ../src/adapt_io.cpp(5846,36)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(5909,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(205,7) ]
LOOP END
===========================================================================

Begin optimization report for: std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::operator[](std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>> *, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::operator[](std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>> *, std::map<int, std::__cxx11::string, std::less<int>, std::allocator<std::pair<const int, std::__cxx11::string>>>::key_type &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::operator[](std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> *, std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>>::key_type &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::operator[](std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>> *, std::map<int, std::vector<int, std::allocator<int>>, std::less<int>, std::allocator<std::pair<const int, std::vector<int, std::allocator<int>>>>>::key_type &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into /usr/include/c++/8/bits/stl_map.h(516,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_map.h(521,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_type, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type, std::_Select1st<std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::value_type>, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::key_compare, std::map<std::__cxx11::string, int, std::less<std::__cxx11::string>, std::allocator<std::pair<const std::__cxx11::string, int>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGrid(const char *, const char *, int, MPI_Comm, MPI_Info)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(6197,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6209,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6221,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6244,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)

   LOOP BEGIN at ../src/adapt_io.cpp(6258,13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6262,13)
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6293,5)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(6316,23) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6316,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.895
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.560 
   remark #15478: estimated potential speedup: 7.420 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6341:9) and offset_tetC (6342:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6342:9) and offset_tetC (6341:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U67c_V->ncol (22:13) and U67c_V->data[i*U67c_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U67c_V->data[i*U67c_V->ncol] (22:13) and U67c_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(6128,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/vector.tcc(109,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6152,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6156,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6158,35)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6162,23)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6167,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6172,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6180,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6183,31)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6185,46)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGrid(const char *, const char *, int, MPI_Comm, MPI_Info) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(6197,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6209,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6221,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6244,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)

   LOOP BEGIN at ../src/adapt_io.cpp(6258,13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6262,13)
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6293,5)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(6316,23) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6316,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6341:9) and offset_tetC (6342:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6342:9) and offset_tetC (6341:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U67c_V->ncol (22:13) and U67c_V->data[i*U67c_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U67c_V->data[i*U67c_V->ncol] (22:13) and U67c_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(6128,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/vector.tcc(109,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6152,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6156,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6158,35)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6162,23)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6167,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6172,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6180,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6183,31)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6185,46)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGrid(const char *, const char *, int, MPI_Comm, MPI_Info) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(6197,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6209,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6221,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6244,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)

   LOOP BEGIN at ../src/adapt_io.cpp(6258,13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6262,13)
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6293,5)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(6316,23) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6316,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Distributed chunk1>
   remark #15389: vectorization support: reference colTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15389: vectorization support: reference RedcolTetCount[i] has unaligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.625
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 4.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6341:9) and offset_tetC (6342:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6342:9) and offset_tetC (6341:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U67c_V->ncol (22:13) and U67c_V->data[i*U67c_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U67c_V->data[i*U67c_V->ncol] (22:13) and U67c_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(6128,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/vector.tcc(109,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6152,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6156,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6158,35)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6162,23)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6167,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6172,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6180,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6183,31)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6185,46)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: ReadUS3DGrid(const char *, const char *, int, MPI_Comm, MPI_Info) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/adapt_io.cpp(6197,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6199,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6209,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6211,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6221,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)
      remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6223,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6244,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U66f_V->ncol (22:13) and U66f_V->data[i*U66f_V->ncol+j] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U66f_V->data[i*U66f_V->ncol+j] (22:13) and U66f_V->ncol (22:13)

   LOOP BEGIN at ../src/adapt_io.cpp(6258,13)
   LOOP END

   LOOP BEGIN at ../src/adapt_io.cpp(6262,13)
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6293,5)
   remark #26015: Exception can be thrown by the call to std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)   [ ../src/adapt_io.cpp(6316,23) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6316,23) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Distributed chunk1>
   remark #15388: vectorization support: reference colTetCount[i] has aligned access   [ ../src/adapt_io.cpp(6326,9) ]
   remark #15388: vectorization support: reference RedcolTetCount[i] has aligned access   [ ../src/adapt_io.cpp(6327,9) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.333
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6324,5)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between offset_tetC (6341:9) and offset_tetC (6342:9)
   remark #15346: vector dependence: assumed FLOW dependence between offset_tetC (6342:9) and offset_tetC (6341:9)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6339,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U67c_V->ncol (22:13) and U67c_V->data[i*U67c_V->ncol] (22:13)
   remark #15346: vector dependence: assumed FLOW dependence between U67c_V->data[i*U67c_V->ncol] (22:13) and U67c_V->ncol (22:13)
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6349,5)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/adapt_io.cpp(6128,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/vector.tcc(109,4) ]
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6152,26)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ../src/adapt_io.cpp(6156,43) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6158,35)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6162,23)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6167,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6172,27)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/adapt_io.cpp(6180,37)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

   LOOP BEGIN at ../src/adapt_io.cpp(6183,31)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_map.h(501,10) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1894,7) inlined into ../src/adapt_io.cpp(6185,46)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(1877,7) inlined into ../src/adapt_io.cpp(6394,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_tree.h(1879,4) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_M_emplace_hint_unique<const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &>, std::tuple<>>(std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::const_iterator, const std::piecewise_construct_t &, std::tuple<const std::map<int, std::vector<double, std::allocator<double>>, std::less<int>, std::allocator<std::pair<const int, std::vector<double, std::allocator<double>>>>>::key_type &> &&, std::tuple<> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::_M_emplace_hint_unique<const std::piecewise_construct_t &, std::tuple<std::remove_reference<std::move_iterator<int *>::__base_ref>::type &&>, std::tuple<>>(std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_type, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type, std::_Select1st<std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::value_type>, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::key_compare, std::map<int, char *, std::less<int>, std::allocator<std::pair<const int, char *>>>::_Pair_alloc_type>::const_iterator, const std::piecewise_construct_t &, std::tuple<std::remove_reference<std::move_iterator<int *>::__base_ref>::type &&> &&, std::tuple<> &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_tree.h(2058,7) inlined into /usr/include/c++/8/bits/stl_tree.h(2426,56)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: FaceHashPointer::operator()(const FaceHashPointer *, const FaceSharedPtr &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has unaligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has unaligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 12.710 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has unaligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1944,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_algo.h(1954,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/predefined_ops.h(43,25) inlined into ../src/NekFace.h(93,9)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1902,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1902,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __first._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1905,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __last._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(341,25) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(342,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1673,54) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(405,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1845,57) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1866,53) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FaceHashPointer::operator()(const FaceHashPointer *, const FaceSharedPtr &) const [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has unaligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.308
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has unaligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.250
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.500 
   remark #15478: estimated potential speedup: 6.910 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has unaligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.308
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1944,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_algo.h(1954,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/predefined_ops.h(43,25) inlined into ../src/NekFace.h(93,9)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1902,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1902,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __first._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1905,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __last._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(341,25) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(342,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1673,54) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(405,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1845,57) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1866,53) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FaceHashPointer::operator()(const FaceHashPointer *, const FaceSharedPtr &) const [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has unaligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 3.250
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.500 
   remark #15478: estimated potential speedup: 6.910 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1944,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_algo.h(1954,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/predefined_ops.h(43,25) inlined into ../src/NekFace.h(93,9)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1902,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1902,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __first._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1905,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __last._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(341,25) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(342,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1673,54) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(405,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1845,57) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1866,53) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FaceHashPointer::operator()(const FaceHashPointer *, const FaceSharedPtr &) const [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has aligned access   [ ../src/NekFace.h(89,16) ]
   remark #15389: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has unaligned access   [ ../src/NekFace.h(89,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 3.720 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1944,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_algo.h(1954,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/predefined_ops.h(43,25) inlined into ../src/NekFace.h(93,9)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1902,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1902,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __first._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1905,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __last._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(341,25) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(342,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1673,54) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(405,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1845,57) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1866,53) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FaceHashPointer::operator()(const FaceHashPointer *, const FaceSharedPtr &) const [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into ../src/NekFace.h(86,39)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference ids.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE.__b_St12_Vector_baseIjSaIjEE[i] has aligned access   [ ../src/NekFace.h(89,16) ]
   remark #15388: vectorization support: reference eid.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE.__b_St12_Vector_baseIiSaIiEE[i] has aligned access   [ ../src/NekFace.h(89,25) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 5.850 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/NekFace.h(87,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed FLOW dependence between seed (16:5) and seed (16:5)
   remark #15346: vector dependence: assumed ANTI dependence between seed (16:5) and seed (16:5)
LOOP END

LOOP BEGIN at ../src/adapt_hashutils.h(32,18) inlined into ../src/NekFace.h(94,9)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1944,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_algo.h(1954,4) ]

   LOOP BEGIN at /usr/include/c++/8/bits/predefined_ops.h(43,25) inlined into ../src/NekFace.h(93,9)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1902,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1902,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __first._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1905,4) inlined into ../src/NekFace.h(93,9)
         remark #15523: loop was not vectorized: loop control variable __last._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(341,25) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(342,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1673,54) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(405,7) inlined into ../src/NekFace.h(93,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/8/bits/stl_heap.h(253,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1845,57) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1866,53) inlined into ../src/NekFace.h(93,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into ../src/NekFace.h(93,9)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__adjust_heap<std::vector<unsigned int, std::allocator<unsigned int>>::iterator, std::__iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::iterator, std::__void_t<>>::difference_type, std::remove_reference<unsigned int &>::type, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<unsigned int, std::allocator<unsigned int>>::iterator, std::__iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::iterator, std::__void_t<>>::difference_type, std::__iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::iterator, std::__void_t<>>::difference_type, std::remove_reference<unsigned int &>::type, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(219,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(133,7) inlined into /usr/include/c++/8/bits/stl_heap.h(238,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::__introsort_loop<std::vector<unsigned int, std::allocator<unsigned int>>::iterator, long, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<unsigned int, std::allocator<unsigned int>>::iterator, std::vector<unsigned int, std::allocator<unsigned int>>::iterator, long, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1944,7)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/8/bits/predefined_ops.h(43,25) inlined into /usr/include/c++/8/bits/stl_algo.h(1954,56)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1902,4) ]

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1902,4) inlined into /usr/include/c++/8/bits/stl_algo.h(1954,56)
         remark #15523: loop was not vectorized: loop control variable __first._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1905,4) inlined into /usr/include/c++/8/bits/stl_algo.h(1954,56)
         remark #15523: loop was not vectorized: loop control variable __last._M_current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(346,4) inlined into /usr/include/c++/8/bits/stl_algo.h(1949,8)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_heap.h(219,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(219,7) inlined into /usr/include/c++/8/bits/stl_algo.h(1949,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(133,7) inlined into /usr/include/c++/8/bits/stl_algo.h(1949,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(405,7) inlined into /usr/include/c++/8/bits/stl_algo.h(1949,8)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_heap.h(219,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(219,7) inlined into /usr/include/c++/8/bits/stl_algo.h(1949,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_heap.h(133,7) inlined into /usr/include/c++/8/bits/stl_algo.h(1949,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__insertion_sort<std::vector<unsigned int, std::allocator<unsigned int>>::iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<unsigned int, std::allocator<unsigned int>>::iterator, std::vector<unsigned int, std::allocator<unsigned int>>::iterator, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1845,57)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ /usr/include/c++/8/bits/stl_algo.h(1828,7) ]

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algo.h(1828,7) inlined into /usr/include/c++/8/bits/stl_algo.h(1856,6)
      remark #15523: loop was not vectorized: loop control variable __next._M_current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::pointer>(std::_Vector_base<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::pointer, std::_Vector_base<std::vector<char, std::allocator<char>>, std::allocator<std::vector<char, std::allocator<char>>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer>(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/8/bits/stl_construct.h(107,4)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.421
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.769
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.810 
   remark #15478: estimated potential speedup: 3.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type>(std::_Vector_base<int, std::allocator<int>>::pointer, std::vector<int, std::allocator<int>>::size_type, const std::iterator_traits<std::_Vector_base<int, std::allocator<int>>::pointer>::value_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 2.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 7.180 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.357
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 3.760 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type>(std::_Vector_base<double, std::allocator<double>>::pointer, std::vector<double, std::allocator<double>>::size_type, const std::iterator_traits<std::vector<double, std::allocator<double>>::pointer>::value_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.875
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type>(std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, const std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.421
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.250 
   remark #15478: estimated potential speedup: 9.370 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type>(std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, const std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type &) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type>(std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, const std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type &) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 5.140 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type>(std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, const std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type &) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.769
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.810 
   remark #15478: estimated potential speedup: 3.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type>(std::_Vector_base<unsigned int, std::allocator<unsigned int>>::pointer, std::vector<unsigned int, std::allocator<unsigned int>>::size_type, const std::iterator_traits<std::vector<unsigned int, std::allocator<unsigned int>>::pointer>::value_type &) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
   remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 4.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.000 
   remark #15478: estimated potential speedup: 2.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_default_initialize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.571
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 2.880 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_default_initialize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.923
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_default_initialize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.270 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_default_initialize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) [core_2nd_gen_avx]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_default_initialize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
      remark #15388: vectorization support: reference *__first has aligned access   [ /usr/include/c++/8/bits/stl_algobase.h(754,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 1.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/8/bits/stl_algobase.h(752,7) inlined into /usr/include/c++/8/bits/stl_vector.h(1491,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================
